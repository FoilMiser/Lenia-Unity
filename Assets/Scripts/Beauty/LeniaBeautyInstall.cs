namespace LeniaBeauty{using UnityEngine;using UnityEngine.UI;using System.Collections;using System.Reflection;using System;public class LeniaBeautyInstall:MonoBehaviour{[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.AfterSceneLoad)]static void Install(){var go=new GameObject("LeniaBeautyUIInstaller");UnityEngine.Object.DontDestroyOnLoad(go);go.AddComponent<LeniaBeautyInstall>();}IEnumerator Start(){yield return new WaitForSeconds(0.4f);Apply();yield return new WaitForSeconds(0.6f);Apply();}void Apply(){RawImage target=FindBestRawImage();if(target!=null){var s=Shader.Find("Unlit/LeniaBeautyUI");if(s!=null){var mat=new Material(s);var tex=target.texture;if(tex!=null)mat.SetTexture("_MainTex",(Texture)tex);var lut=BuildNeonLUT(512);mat.SetTexture("_PaletteTex",lut);mat.SetFloat("_Exposure",6.0f);mat.SetFloat("_Gamma",1.05f);mat.SetFloat("_PaletteScale",0.86f);mat.SetFloat("_PaletteOffset",0.0f);mat.SetFloat("_EdgeStrength",0.5f);mat.SetFloat("_EdgeThreshold",0.008f);mat.SetFloat("_Bands",12f);mat.SetFloat("_BandStrength",0.18f);target.material=mat;}}TrySetOnAny("DispExposure",5.8f);TrySetOnAny("DispGamma",1.05f);TrySetOnAny("PaletteScale",0.86f);TrySetOnAny("EdgeStrength",0.5f);TrySetOnAny("EdgeThreshold",0.008f);}RawImage FindBestRawImage(){RawImage best=null;int bestPx=0;var list=GameObject.FindObjectsByType<RawImage>(FindObjectsInactive.Include,FindObjectsSortMode.None);foreach(var ri in list){var t=ri.texture;if(t==null)continue;int px=t.width*t.height;if(px>bestPx){bestPx=px;best=ri;}}return best;}void TrySetOnAny(string name,object value){var list=GameObject.FindObjectsByType<MonoBehaviour>(FindObjectsInactive.Include,FindObjectsSortMode.None);foreach(var mb in list){var tp=mb.GetType();var f=tp.GetField(name,BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.IgnoreCase);if(f!=null){try{f.SetValue(mb,Convert.ChangeType(value,f.FieldType));}catch{}}var p=tp.GetProperty(name,BindingFlags.Instance|BindingFlags.Public|BindingFlags.NonPublic|BindingFlags.IgnoreCase);if(p!=null&&p.CanWrite){try{p.SetValue(mb,Convert.ChangeType(value,p.PropertyType));}catch{}}}}Texture2D BuildNeonLUT(int steps){var tex=new Texture2D(steps,1,TextureFormat.RGBA32,false,true);tex.wrapMode=TextureWrapMode.Clamp;tex.filterMode=FilterMode.Bilinear;for(int i=0;i<steps;i++){float t=(float)i/(steps-1);var c=EvaluateNeon(t);tex.SetPixel(i,0,c);}tex.Apply(false,false);return tex;}Color EvaluateNeon(float t){if(t<0.05f)return new Color(0f,0f,0.02f,1f)*(t/0.05f);if(t<0.30f){float k=(t-0.05f)/0.25f;return Color.Lerp(new Color(0f,0.08f,0.11f,1f),new Color(0.04f,0.91f,1f,1f),k);}if(t<0.55f){float k=(t-0.30f)/0.25f;return Color.Lerp(new Color(0.04f,0.91f,1f,1f),Color.white,k);}if(t<0.80f){float k=(t-0.55f)/0.25f;return Color.Lerp(Color.white,new Color(1f,0.4f,1f,1f),k);}float kk=(t-0.80f)/0.20f;return Color.Lerp(new Color(1f,0.4f,1f,1f),new Color(0.16f,0f,0.16f,1f),kk);} }
